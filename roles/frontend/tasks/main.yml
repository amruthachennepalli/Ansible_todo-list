- name: Nginx Installation 
  apt:
    name: nginx
    update_cache: yes
    state: present 

- name: npm Installation 
  apt:
    name: npm
    update_cache: yes
    state: present   

# - name: Add user todoapp
#   user:
#     name: todoapp
#     shell: /bin/bash

- name: Download {{COMPONENT}} from nexus
  get_url:
    url: http://172.31.68.193:8081/repository/{{COMPONENT}}/{{COMPONENT}}-{{APP_VERSION}}.zip
    dest: /tmp/{{COMPONENT}}.zip
    username: admin
    password: admin123

# - name: Clean the old artifacts
#   file:
#     path: /home/todoapp/{{COMPONENT}}
#     state: absent

# - name: Create the artifact path
#   file:
#     path: /home/todoapp/{{COMPONENT}}
#     state: directory

# - name: Unzip {{COMPONENT}} Component
#   unarchive:
#     src: /tmp/{{COMPONENT}}.zip
#     dest: /home/todoapp/{{COMPONENT}}
#     remote_src: yes  

# - name: Copy systemd file
#   template:
#     src: systemd.service
#     dest: /etc/systemd/system/{{COMPONENT}}.service

# - name: Start {{COMPONENT}} Service
#   systemd:
#     name: "{{COMPONENT}}"
#     daemon_reload: yes
#     state: started
#     enabled: yes 

- name: Delete the default content
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/sites-available/default
    - /var/www/html

- name: Create HtDocs Directory
  file:
    path: /var/www/html
    state: directory

- name: Clean the old artifacts
  file:
    path: /var/www/html/todoapp/{{COMPONENT}}
    state: absent

- name: Create the artifact path
  file:
    path: /var/www/html/todoapp/{{COMPONENT}}
    state: directory
    
- name: Unzip the Downloaded Content
  unarchive:
    src: /tmp/{{COMPONENT}}.zip
    dest: /var/www/html/todoapp/{{COMPONENT}}
    remote_src: yes

- name: Update Todo Config file
  template:
    src: todo.conf
    dest: /etc/nginx/sites-enabled/todo.conf
  notify: Restart Nginx

# - name: Update Nginx Main Config
#   template:
#     src: nginx.conf
#     dest: /etc/nginx/nginx.conf

- name: Start Nginx
  systemd:
    state: started
    name: nginx
    enabled: yes

- name: Install Node Exporter Prometheus Monitoring
  include_role:
    name: common
    tasks_from: node_exporter 

- name: Install Filebeat Monitoring
  include_role:
    name: common
    tasks_from: filebeat
  vars:
    IS_STRUCTURED: false
    LOG_FILES:
      - { file: "/var/log/nginx/access.log", type: "nginx_access" }
      - { file: "/var/log/nginx/error.log", type: "nginx_error" }     

# - name: Restart {{COMPONENT}} Service
#   systemd:
#     name: "{{COMPONENT}}"
#     daemon_reload: yes
#     state: restarted
#     enabled: yes  
  






























     




# - name: Install Filebeat Monitoring
#   include_role:
#     name: common
#     tasks_from: filebeat
#   vars:
#     IS_STRUCTURED: false
#     LOG_FILES:
#       - { file: "/var/log/nginx/access.log", type: "nginx_access" }

# - name: NPM start 
#   command: npm start
#   args:
#     chdir: /var/www/html/todoapp/frontend
#   async: 42
#   poll: 0
#   become: yes
#   become_user: root       